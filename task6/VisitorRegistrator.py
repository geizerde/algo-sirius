from datetime import datetime, timedelta

class VisitorRegistrator:
    IS_ENTERED = 1
    IS_LEAVE = -1

    @staticmethod
    def execute(visits: list((str, str))):
        events = []

        for start, end in visits:
            start_date = datetime.strptime(start, "%Y-%m-%d")
            end_date = datetime.strptime(end, "%Y-%m-%d") + timedelta(days=1)
            events.append((start_date, VisitorRegistrator.IS_ENTERED))
            events.append((end_date, VisitorRegistrator.IS_LEAVE))

        events.sort(key=lambda x: (x[0], x[1]))

        max_visitors = 0
        current_visitors = 0
        max_day = None

        for date, change in events:
            current_visitors += change
            if current_visitors > max_visitors:
                max_visitors = current_visitors
                max_day = date

        return max_day.strftime("%Y-%m-%d"), max_visitors

# visits = [("2024-09-15", "2024-09-15"), ("2024-09-14", "2024-09-21")]

# visits = [
#     ("2024-01-01", "2024-01-03"),
#     ("2024-01-02", "2024-01-02"),
#     ("2024-01-05", "2024-01-10"),
#     ("2024-01-07", "2024-01-08"),
#     ("2024-01-10", "2024-01-15"),
#     ("2024-01-12", "2024-01-13"),
#     ("2024-01-14", "2024-01-20"),
#     ("2024-01-15", "2024-01-15"),
#     ("2024-01-18", "2024-01-25"),
#     ("2024-01-19", "2024-01-21"),
#     ("2024-01-20", "2024-01-23"),
#     ("2024-01-22", "2024-01-22"),
#     ("2024-01-23", "2024-01-26"),
#     ("2024-01-24", "2024-01-29"),
#     ("2024-01-25", "2024-01-30"),
#     ("2024-01-28", "2024-02-02"),
#     ("2024-01-30", "2024-02-01"),
#     ("2024-02-01", "2024-02-05"),
#     ("2024-02-03", "2024-02-06"),
#     ("2024-02-05", "2024-02-10"),
#     ("2024-02-07", "2024-02-09"),
#     ("2024-02-08", "2024-02-12"),
#     ("2024-02-11", "2024-02-14"),
#     ("2024-02-13", "2024-02-17"),
#     ("2024-02-14", "2024-02-20"),
#     ("2024-02-16", "2024-02-18"),
#     ("2024-02-19", "2024-02-23"),
#     ("2024-02-20", "2024-02-22"),
#     ("2024-02-21", "2024-02-25"),
#     ("2024-02-24", "2024-03-01"),
#     ("2024-02-27", "2024-03-03"),
#     ("2024-02-28", "2024-03-04"),
#     ("2024-03-01", "2024-03-05"),
#     ("2024-03-02", "2024-03-07"),
#     ("2024-03-06", "2024-03-10"),
#     ("2024-03-08", "2024-03-12"),
#     ("2024-03-09", "2024-03-15"),
#     ("2024-03-11", "2024-03-14"),
#     ("2024-03-13", "2024-03-18"),
#     ("2024-03-15", "2024-03-17"),
#     ("2024-03-16", "2024-03-20"),
#     ("2024-03-19", "2024-03-25"),
#     ("2024-03-21", "2024-03-24"),
#     ("2024-03-23", "2024-03-30"),
#     ("2024-03-25", "2024-03-27"),
#     ("2024-03-26", "2024-04-01"),
#     ("2024-03-29", "2024-04-05"),
#     ("2024-04-01", "2024-04-07"),
#     ("2024-04-03", "2024-04-09"),
#     ("2024-04-04", "2024-04-10"),
#     ("2024-04-06", "2024-04-12"),
#     ("2024-04-08", "2024-04-15"),
#     ("2024-04-10", "2024-04-13"),
#     ("2024-04-11", "2024-04-14"),
#     ("2024-04-12", "2024-04-16"),
#     ("2024-04-14", "2024-04-20"),
#     ("2024-04-15", "2024-04-18"),
#     ("2024-04-17", "2024-04-21"),
#     ("2024-04-18", "2024-04-23"),
#     ("2024-04-20", "2024-04-25"),
#     ("2024-04-22", "2024-04-27"),
#     ("2024-04-24", "2024-04-30"),
#     ("2024-04-26", "2024-05-02"),
#     ("2024-04-28", "2024-05-05"),
#     ("2024-05-01", "2024-05-06"),
#     ("2024-05-03", "2024-05-09"),
#     ("2024-05-05", "2024-05-12"),
#     ("2024-05-07", "2024-05-14"),
#     ("2024-05-08", "2024-05-11"),
#     ("2024-05-10", "2024-05-15"),
#     ("2024-05-12", "2024-05-18"),
#     ("2024-05-14", "2024-05-20"),
#     ("2024-05-15", "2024-05-19"),
#     ("2024-05-16", "2024-05-21"),
#     ("2024-05-18", "2024-05-23"),
#     ("2024-05-20", "2024-05-25"),
#     ("2024-05-22", "2024-05-28"),
#     ("2024-05-23", "2024-05-30"),
#     ("2024-05-26", "2024-06-02"),
#     ("2024-05-29", "2024-06-05"),
#     ("2024-06-01", "2024-06-07"),
#     ("2024-06-03", "2024-06-10"),
#     ("2024-06-04", "2024-06-08"),
#     ("2024-06-06", "2024-06-12"),
#     ("2024-06-08", "2024-06-15"),
#     ("2024-06-10", "2024-06-17"),
#     ("2024-06-12", "2024-06-18"),
#     ("2024-06-15", "2024-06-21"),
#     ("2024-06-16", "2024-06-22"),
#     ("2024-06-20", "2024-06-25"),
#     ("2024-06-22", "2024-06-28"),
#     ("2024-06-24", "2024-06-30"),
# ]


# max_day, max_count = VisitorRegistrator.execute(visits)
# print(f"День с максимальным количеством посетителей: {max_day} ({max_count} человек)")